import{_ as d,r as o,o as u,c as p,a as n,b as t,d as s,w as a,e as c}from"./app-81765434.js";const m={},g={href:"http://wp-cli.org/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://wp-cli.org",target:"_blank",rel:"noopener noreferrer"},b={href:"https://getcomposer.org",target:"_blank",rel:"noopener noreferrer"},f={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.jetbrains.com/phpstorm/",target:"_blank",rel:"noopener noreferrer"};function w(C,e){const i=o("ExternalLinkIcon"),r=o("CodeGroupItem"),l=o("CodeGroup");return u(),p("div",null,[e[20]||(e[20]=n("h1",{id:"create-extensions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#create-extensions","aria-hidden":"true"},"#"),t(" Create Extensions")],-1)),n("p",null,[e[1]||(e[1]=t("We've created a plugin ")),e[2]||(e[2]=n("code",null,"um-wpcli",-1)),e[3]||(e[3]=t(" that integrates ")),n("a",g,[e[0]||(e[0]=t("WP-CLI")),s(i)]),e[4]||(e[4]=t(" for our custom commands to test & scaffold new Ultimate Member extensions. This tool will help you create extensions from scratch following our plugin file & directory structures and follow best practices with PHP(")),e[5]||(e[5]=n("code",null,"PSR4",-1)),e[6]||(e[6]=t(") & WordPress Coding Standards."))]),e[21]||(e[21]=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),t(" Installation")],-1)),e[22]||(e[22]=n("h4",{id:"prerequisites",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),t(" Prerequisites")],-1)),n("ul",null,[n("li",null,[n("a",h,[e[7]||(e[7]=t("Node.js")),s(i)]),e[8]||(e[8]=t(" version 16 or higher."))]),n("li",null,[n("a",v,[e[9]||(e[9]=t("WP-CLI")),s(i)]),e[10]||(e[10]=t(" version 2.8.1 or higher."))]),n("li",null,[n("a",b,[e[11]||(e[11]=t("Composer")),s(i)]),e[12]||(e[12]=t(" version 2.5.8 or higher."))]),n("li",null,[e[16]||(e[16]=t("Terminal for accessing WP-CLI via its command line interface (CLI). ")),n("ul",null,[n("li",null,[e[15]||(e[15]=t("Supports: ")),n("ul",null,[n("li",null,[n("a",f,[e[13]||(e[13]=t("VSCode")),s(i)])]),n("li",null,[n("a",x,[e[14]||(e[14]=t("PHPStorm")),s(i)])])])])])])]),e[23]||(e[23]=n("p",null,"UM Extended plugin can be cloned with:",-1)),s(l,null,{default:a(()=>[s(r,{title:"Git-Clone"},{default:a(()=>e[17]||(e[17]=[n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,`gh repo clone ultimatemember/Extended
`)])],-1)])),_:1}),s(r,{title:"Curl",active:""},{default:a(()=>e[18]||(e[18]=[n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"curl"),t(),n("span",{class:"token parameter variable"},"-d"),t(),n("span",{class:"token string"},"''"),t(` https://github.com/ultimatemember/Extended.git
`)])])],-1)])),_:1}),s(r,{title:"WP-CLI",active:""},{default:a(()=>e[19]||(e[19]=[n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[t("wp plugin "),n("span",{class:"token function"},"install"),t(" https://github.com/ultimatemember/Extended/archive/refs/heads/main.zip "),n("span",{class:"token parameter variable"},"--force"),t(`
`)])])],-1)])),_:1})]),_:1}),e[24]||(e[24]=c(`<div class="custom-container tip"><p class="custom-container-title">Clone in the Plugins Directory</p><p>We recommend that you clone the plugin into <code>/wp-content/plugins/</code> directory. This is how we develop our plugins. This allows us to test plugins directly on our local WordPress site and commits our changes to the repository.</p></div><h3 id="install-dependencies" tabindex="-1"><a class="header-anchor" href="#install-dependencies" aria-hidden="true">#</a> Install Dependencies</h3><p>Once the plugin has been cloned &amp; extracted, run the following command within the extended directory <code>/wp-content/plugins/Extended/</code>:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> <span class="token function">install</span>
</code></pre></div><h3 id="activate-the-plugin" tabindex="-1"><a class="header-anchor" href="#activate-the-plugin" aria-hidden="true">#</a> Activate the Plugin</h3><p>Activate the Extended plugin via the Plugins manager or via WP-CLI with:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>wp plugin activate Extended
</code></pre></div><p>and run the Scaffold commands below.</p><h2 id="scaffold" tabindex="-1"><a class="header-anchor" href="#scaffold" aria-hidden="true">#</a> Scaffold</h2><p>UM Extended plugin has a <code>um-wpcli</code> extension that integrates WP-CLI to help you in creating and testing extensions. You can create a new extension with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>wp um dev scaffold robert
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>the generated file structure should look like this:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Extended/src/
├─ um-robert
│  ├─ src
│  │  └─ Core.php
│  │  └─ Enqueue.php
│  ├─ assets
│  │  └─ frontend/js/
│  │  └─ frontend/css/
│  │  └─ frontend/images/
│  │  └─ admin/js/
│  │  └─ admin/css/
│  │  └─ admin/images/
│  └─ um-robert.php
│  └─ composer.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once the extension has been generated, you must run <code>composer update</code> in the <code>Extended</code> directory to autoload and register the namespace &amp; source directory of the new extension.</p>`,14))])}const P=d(m,[["render",w],["__file","create-extensions.html.vue"]]);export{P as default};
